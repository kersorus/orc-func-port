
/* autogenerated from audiomixer_orc_add_volume_s16.orc */

/* audiomixer_orc_add_volume_s16 */
.global audiomixer_orc_add_volume_s16
.p2align 4
audiomixer_orc_add_volume_s16:
# 1: loadpw
# LOOP SHIFT 0
# 0: loadw
# 2: mulswl
# 3: shrsl
# 4: convssslw
# 5: loadw
# 6: addssw
# 7: storew
# LOOP SHIFT 1
# 0: loadw
# 2: mulswl
# 3: shrsl
# 4: convssslw
# 5: loadw
# 6: addssw
# 7: storew
# LOOP SHIFT 2
# 0: loadw
# 2: mulswl
# 3: shrsl
# 4: convssslw
# 5: loadw
# 6: addssw
# 7: storew
# LOOP SHIFT 3
# 0: loadw
# 2: mulswl
# 3: shrsl
# 4: convssslw
# 5: loadw
# 6: addssw
# 7: storew
# 0: loadw
# 2: mulswl
# 3: shrsl
# 4: convssslw
# 5: loadw
# 6: addssw
# 7: storew
# LOOP SHIFT 3
# 0: loadw
# 2: mulswl
# 3: shrsl
# 4: convssslw
# 5: loadw
# 6: addssw
# 7: storew
# LOOP SHIFT 2
# 0: loadw
# 2: mulswl
# 3: shrsl
# 4: convssslw
# 5: loadw
# 6: addssw
# 7: storew
# LOOP SHIFT 1
# 0: loadw
# 2: mulswl
# 3: shrsl
# 4: convssslw
# 5: loadw
# 6: addssw
# 7: storew
# LOOP SHIFT 0
# 0: loadw
# 2: mulswl
# 3: shrsl
# 4: convssslw
# 5: loadw
# 6: addssw
# 7: storew
  endbr64 
  vmovd 632(%rdi), %xmm0
  vpbroadcastw %xmm0, %ymm0
  mov $32, %eax
  sub 24(%rdi), %eax
  and $15, %eax
  sar %eax
  cmp %eax, 8(%rdi)
  jle 6f
  movl %eax, 12(%rdi)
  movl 8(%rdi), %ecx
  sub %eax, %ecx
  mov %ecx, %eax
  sar $4, %ecx
  movl %ecx, 16(%rdi)
  and $15, %eax
  movl %eax, 20(%rdi)
  jmp 7f
6:
  movl 8(%rdi), %eax
  movl %eax, 12(%rdi)
  mov $0, %eax
  movl %eax, 16(%rdi)
  movl %eax, 20(%rdi)
7:
  mov 24(%rdi), %rax
  mov 56(%rdi), %rdx
  testl $1, 12(%rdi)
  jz 16f
  vpxor %ymm1, %ymm1, %ymm1
  vpinsrw $0, 0(%rdx), %xmm1, %xmm1
  vpmulhw %xmm0, %xmm1, %xmm2
  vpmullw %xmm0, %xmm1, %xmm1
  vpunpcklwd %xmm2, %xmm1, %xmm1
  vpsrad $11, %xmm1, %xmm1
  vpackssdw %ymm1, %ymm1, %ymm1
  vpxor %ymm2, %ymm2, %ymm2
  vpinsrw $0, 0(%rax), %xmm2, %xmm2
  vpaddsw %xmm1, %xmm2, %xmm2
  vpextrw $0, %xmm2, 0(%rax)
  leaq 2(%rax), %rax
  leaq 2(%rdx), %rdx
16:
  testl $2, 12(%rdi)
  jz 17f
  vmovd 0(%rdx), %xmm1
  vpmulhw %xmm0, %xmm1, %xmm2
  vpmullw %xmm0, %xmm1, %xmm1
  vpunpcklwd %xmm2, %xmm1, %xmm1
  vpsrad $11, %xmm1, %xmm1
  vpackssdw %ymm1, %ymm1, %ymm1
  vmovd 0(%rax), %xmm2
  vpaddsw %xmm1, %xmm2, %xmm2
  vmovd %xmm2, 0(%rax)
  leaq 4(%rax), %rax
  leaq 4(%rdx), %rdx
17:
  testl $4, 12(%rdi)
  jz 18f
  vmovq 0(%rdx), %xmm1
  vpmulhw %xmm0, %xmm1, %xmm2
  vpmullw %xmm0, %xmm1, %xmm1
  vpunpcklwd %xmm2, %xmm1, %xmm1
  vpsrad $11, %xmm1, %xmm1
  vpackssdw %ymm1, %ymm1, %ymm1
  vmovq 0(%rax), %xmm2
  vpaddsw %xmm1, %xmm2, %xmm2
  vmovq %xmm2, 0(%rax)
  leaq 8(%rax), %rax
  leaq 8(%rdx), %rdx
18:
1:
  cmpb $0, 16(%rdi)
  jz 3f
  movl 16(%rdi), %esi
.p2align 4
2:
  vmovdqu 0(%rdx), %xmm1
  vpmulhw %ymm0, %ymm1, %ymm2
  vpmullw %ymm0, %ymm1, %ymm1
  vpunpckhwd %ymm2, %ymm1, %ymm3
  vpunpcklwd %ymm2, %ymm1, %ymm1
  vperm2i128 $32, %ymm3, %ymm1, %ymm1
  vpsrad $11, %ymm1, %ymm1
  vpackssdw %ymm1, %ymm1, %ymm1
  vpermq $216, %ymm1, %ymm1
  vmovdqa 0(%rax), %xmm2
  vpaddsw %xmm1, %xmm2, %xmm2
  vmovdqa %xmm2, 0(%rax)
  vmovdqu 16(%rdx), %xmm1
  vpmulhw %ymm0, %ymm1, %ymm2
  vpmullw %ymm0, %ymm1, %ymm1
  vpunpckhwd %ymm2, %ymm1, %ymm3
  vpunpcklwd %ymm2, %ymm1, %ymm1
  vperm2i128 $32, %ymm3, %ymm1, %ymm1
  vpsrad $11, %ymm1, %ymm1
  vpackssdw %ymm1, %ymm1, %ymm1
  vpermq $216, %ymm1, %ymm1
  vmovdqa 16(%rax), %xmm2
  vpaddsw %xmm1, %xmm2, %xmm2
  vmovdqa %xmm2, 16(%rax)
  leaq 32(%rax), %rax
  leaq 32(%rdx), %rdx
  add $-1, %esi
  jnz 2b
3:
  testl $8, 20(%rdi)
  jz 11f
  vmovdqu 0(%rdx), %xmm1
  vpmulhw %ymm0, %ymm1, %ymm2
  vpmullw %ymm0, %ymm1, %ymm1
  vpunpckhwd %ymm2, %ymm1, %ymm3
  vpunpcklwd %ymm2, %ymm1, %ymm1
  vperm2i128 $32, %ymm3, %ymm1, %ymm1
  vpsrad $11, %ymm1, %ymm1
  vpackssdw %ymm1, %ymm1, %ymm1
  vpermq $216, %ymm1, %ymm1
  vmovdqu 0(%rax), %xmm2
  vpaddsw %xmm1, %xmm2, %xmm2
  vmovdqu %xmm2, 0(%rax)
  leaq 16(%rax), %rax
  leaq 16(%rdx), %rdx
11:
  testl $4, 20(%rdi)
  jz 10f
  vmovq 0(%rdx), %xmm1
  vpmulhw %xmm0, %xmm1, %xmm2
  vpmullw %xmm0, %xmm1, %xmm1
  vpunpcklwd %xmm2, %xmm1, %xmm1
  vpsrad $11, %xmm1, %xmm1
  vpackssdw %ymm1, %ymm1, %ymm1
  vmovq 0(%rax), %xmm2
  vpaddsw %xmm1, %xmm2, %xmm2
  vmovq %xmm2, 0(%rax)
  leaq 8(%rax), %rax
  leaq 8(%rdx), %rdx
10:
  testl $2, 20(%rdi)
  jz 9f
  vmovd 0(%rdx), %xmm1
  vpmulhw %xmm0, %xmm1, %xmm2
  vpmullw %xmm0, %xmm1, %xmm1
  vpunpcklwd %xmm2, %xmm1, %xmm1
  vpsrad $11, %xmm1, %xmm1
  vpackssdw %ymm1, %ymm1, %ymm1
  vmovd 0(%rax), %xmm2
  vpaddsw %xmm1, %xmm2, %xmm2
  vmovd %xmm2, 0(%rax)
  leaq 4(%rax), %rax
  leaq 4(%rdx), %rdx
9:
  testl $1, 20(%rdi)
  jz 8f
  vpxor %ymm1, %ymm1, %ymm1
  vpinsrw $0, 0(%rdx), %xmm1, %xmm1
  vpmulhw %xmm0, %xmm1, %xmm2
  vpmullw %xmm0, %xmm1, %xmm1
  vpunpcklwd %xmm2, %xmm1, %xmm1
  vpsrad $11, %xmm1, %xmm1
  vpackssdw %ymm1, %ymm1, %ymm1
  vpxor %ymm2, %ymm2, %ymm2
  vpinsrw $0, 0(%rax), %xmm2, %xmm2
  vpaddsw %xmm1, %xmm2, %xmm2
  vpextrw $0, %xmm2, 0(%rax)
  leaq 2(%rax), %rax
  leaq 2(%rdx), %rdx
8:
  vzeroupper 
  retq 


