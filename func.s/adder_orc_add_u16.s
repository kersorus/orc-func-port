
/* autogenerated from adder_orc_add_u16.orc */

/* adder_orc_add_u16 */
.global adder_orc_add_u16
.p2align 4
adder_orc_add_u16:
# LOOP SHIFT 0
# 0: loadw
# 1: loadw
# 2: addusw
# 3: storew
# LOOP SHIFT 1
# 0: loadw
# 1: loadw
# 2: addusw
# 3: storew
# LOOP SHIFT 2
# 0: loadw
# 1: loadw
# 2: addusw
# 3: storew
# LOOP SHIFT 3
# 0: loadw
# 1: loadw
# 2: addusw
# 3: storew
# 0: loadw
# 1: loadw
# 2: addusw
# 3: storew
# LOOP SHIFT 3
# 0: loadw
# 1: loadw
# 2: addusw
# 3: storew
# LOOP SHIFT 2
# 0: loadw
# 1: loadw
# 2: addusw
# 3: storew
# LOOP SHIFT 1
# 0: loadw
# 1: loadw
# 2: addusw
# 3: storew
# LOOP SHIFT 0
# 0: loadw
# 1: loadw
# 2: addusw
# 3: storew
  endbr64 
  mov $16, %eax
  sub 24(%rdi), %eax
  and $15, %eax
  sar %eax
  cmp %eax, 8(%rdi)
  jle 6f
  movl %eax, 12(%rdi)
  movl 8(%rdi), %ecx
  sub %eax, %ecx
  mov %ecx, %eax
  sar $4, %ecx
  movl %ecx, 16(%rdi)
  and $15, %eax
  movl %eax, 20(%rdi)
  jmp 7f
6:
  movl 8(%rdi), %eax
  movl %eax, 12(%rdi)
  mov $0, %eax
  movl %eax, 16(%rdi)
  movl %eax, 20(%rdi)
7:
  mov 24(%rdi), %rax
  mov 56(%rdi), %rdx
  testl $1, 12(%rdi)
  jz 13f
  pxor %xmm0, %xmm0
  pinsrw $0, 0(%rax), %xmm0
  pxor %xmm1, %xmm1
  pinsrw $0, 0(%rdx), %xmm1
  paddusw %xmm1, %xmm0
  pextrw $0, %xmm0, 0(%rax)
  leaq 2(%rax), %rax
  leaq 2(%rdx), %rdx
13:
  testl $2, 12(%rdi)
  jz 14f
  movd 0(%rax), %xmm0
  movd 0(%rdx), %xmm1
  paddusw %xmm1, %xmm0
  movd %xmm0, 0(%rax)
  leaq 4(%rax), %rax
  leaq 4(%rdx), %rdx
14:
  testl $4, 12(%rdi)
  jz 15f
  movq 0(%rax), %xmm0
  movq 0(%rdx), %xmm1
  paddusw %xmm1, %xmm0
  movq %xmm0, 0(%rax)
  leaq 8(%rax), %rax
  leaq 8(%rdx), %rdx
15:
1:
  cmp $0, 16(%rdi)
  jz 3f
  movl 16(%rdi), %esi
.p2align 4
2:
  movdqa 0(%rax), %xmm0
  movdqu 0(%rdx), %xmm1
  paddusw %xmm1, %xmm0
  movdqa %xmm0, 0(%rax)
  movdqa 16(%rax), %xmm0
  movdqu 16(%rdx), %xmm1
  paddusw %xmm1, %xmm0
  movdqa %xmm0, 16(%rax)
  leaq 32(%rax), %rax
  leaq 32(%rdx), %rdx
  add $-1, %esi
  jnz 2b
3:
  testl $8, 20(%rdi)
  jz 11f
  movdqu 0(%rax), %xmm0
  movdqu 0(%rdx), %xmm1
  paddusw %xmm1, %xmm0
  movdqu %xmm0, 0(%rax)
  leaq 16(%rax), %rax
  leaq 16(%rdx), %rdx
11:
  testl $4, 20(%rdi)
  jz 10f
  movq 0(%rax), %xmm0
  movq 0(%rdx), %xmm1
  paddusw %xmm1, %xmm0
  movq %xmm0, 0(%rax)
  leaq 8(%rax), %rax
  leaq 8(%rdx), %rdx
10:
  testl $2, 20(%rdi)
  jz 9f
  movd 0(%rax), %xmm0
  movd 0(%rdx), %xmm1
  paddusw %xmm1, %xmm0
  movd %xmm0, 0(%rax)
  leaq 4(%rax), %rax
  leaq 4(%rdx), %rdx
9:
  testl $1, 20(%rdi)
  jz 8f
  pxor %xmm0, %xmm0
  pinsrw $0, 0(%rax), %xmm0
  pxor %xmm1, %xmm1
  pinsrw $0, 0(%rdx), %xmm1
  paddusw %xmm1, %xmm0
  pextrw $0, %xmm0, 0(%rax)
  leaq 2(%rax), %rax
  leaq 2(%rdx), %rdx
8:
  retq 


